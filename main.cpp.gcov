        -:    0:Source:main.cpp
        -:    0:Graph:main.gcno
        -:    0:Data:main.gcda
        -:    0:Runs:1
        -:    1:#include "graph.hpp"
        -:    2:#include <iostream>
        -:    3:
        1:    4:int main() {
        1:    5:    Graph g(5, false);  //Graph with 5 vertices, undirected
        -:    6:
        -:    7:    //Valid edges
        1:    8:    g.addEdge(0, 1);
        1:    9:    g.addEdge(0, 4);
        1:   10:    g.addEdge(1, 2);
        1:   11:    g.addEdge(1, 3);
        1:   12:    g.addEdge(1, 4);
        1:   13:    g.addEdge(2, 3);
        1:   14:    g.addEdge(3, 4);
        -:   15:
        1:   16:    std::cout << "Graph adjacency list:" << std::endl;
        1:   17:    g.printGraph();
        -:   18:
        1:   19:    std::cout << "\nRemoving edge 1-4...\n";
        1:   20:    g.removeEdge(1, 4);
        -:   21:
        1:   22:    std::cout << "\nTrying to remove invalid edge 10-2...\n";
        1:   23:    g.removeEdge(10, 2);  //hit the error line
        -:   24:
        1:   25:    std::cout << "\nTrying to add invalid edge -1-2...\n";
        1:   26:    g.addEdge(-1, 2);  //hit the error line
        -:   27:
        1:   28:    std::cout << "\nCalling getNeighbors(0):\n";
        3:   29:    for (int neighbor : g.getNeighbors(0)) {
        2:   30:        std::cout << neighbor << " ";
        -:   31:    }
        1:   32:    std::cout << "\n";
        -:   33:
        1:   34:    std::cout << "Number of vertices: " << g.getNumVertices() << std::endl;
        -:   35:
        1:   36:    return 0;
        1:   37:}
